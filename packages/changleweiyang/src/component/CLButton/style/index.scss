@use '@/style/base.scss' as *;
@use 'variables.scss' as *;
@use 'sass:map';

$button-name: joinComponentVarName('button');

// .clwy-button
.#{$button-name} {
  // mixins content
  @include set-variables() {
    @include set-map-css-var('button', $button);
    @include set-map-css-var('button', $colors);
    @include set-map-css-var('button-size', $common-size);
    @include set-map-css-var('button-border-radius', $border-radius);
  }
}

.#{$button-name} {
  outline: none;
  border: none;
  cursor: pointer;
  user-select: none;
  text-align: center;
  white-space: nowrap;
  box-sizing: border-box;
  vertical-align: middle;
  line-height: 1;
  padding: getCssVar('padding');
  border-radius: getCssVar('button', 'border-radius');

  @include when('disabled') {}

  @include when('loading') {}

}

@mixin type-variables($type) {

}
// .clwy-button--error { background-color: var(--clwy-button-error); }
@each $type in ('default', 'success', 'error', 'warning') {
  .#{$button-name}--#{$type} {
    background-color: getCssVar('button', $type);
    color: getCssVar('button', 'text-color');
  }
}

// set size's height
@each $size in ('small', 'default', 'large') {
  .#{$button-name}--#{$size} {
    height: getCssVar('button', 'size', $size);
    border-radius: getCssVar('button', 'border-radius', $size);
  }
}

@mixin types-theme($type) {
  $button-type-theme: (
    'default': (),
    'success': (),
    'error': (),
    'warning': (),
    'hover': (),
    'disabled': ()
  )
}